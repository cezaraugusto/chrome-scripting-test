{"version":3,"file":"hot/background/service_worker.228bf33d7ae13739fe36.hot-update.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3DA","sources":["webpack://content/./service-worker.js","webpack://content/webpack/runtime/getFullHash"],"sourcesContent":[";\nchrome.runtime.onMessageExternal.addListener(async (request, _sender, sendResponse) => {\n  const managementInfo = await new Promise(resolve => {\n    chrome.management.getSelf(resolve);\n  });\n\n  // Ping-pong between the user extension background page(this)\n  // and the middleware socket client (reloadService.ts),\n  // which will then send a message to the server\n  // (startServer.ts) so it can display the extension info.\n  if (request.initialLoadData) {\n    sendResponse({\n      id: chrome.runtime.id,\n      manifest: chrome.runtime.getManifest(),\n      management: managementInfo\n    });\n    return true;\n  }\n\n  // Reload the extension runtime if the manifest or\n  // service worker changes. \n  if (request.changedFile === 'manifest.json' || request.changedFile === 'service_worker' || request.changedFile === '_locales') {\n    setTimeout(() => {\n      sendResponse({\n        reloaded: true\n      });\n      chrome.runtime.reload();\n    }, 750);\n  }\n\n  // Reload all tabs if the contextMenus code changes.\n  if (request.changedFile === 'contextMenus') {\n    sendResponse({\n      reloaded: true\n    });\n    chrome.tabs.query({}, tabs => {\n      if (!tabs) return;\n      tabs.forEach(tab => chrome.tabs.reload(tab.id));\n    });\n  }\n\n  // Reload all tabs if the declarative_net_request code changes.\n  if (request.changedFile === 'declarative_net_request') {\n    sendResponse({\n      reloaded: true\n    });\n    chrome.runtime.reload();\n  }\n  return true;\n});\nchrome.action.onClicked.addListener(tab => {\n  console.log(\"=111=\");\n  console.log(\"====================================\");\n  chrome.scripting.executeScript(r.solve({\n    target: {\n      tabId: tab.id\n    },\n    files: [\"./scripts/content.js\"]\n  }));\n});","__webpack_require__.h = () => (\"b6ad2cf2fb6348f59007\")"],"names":[],"sourceRoot":""}